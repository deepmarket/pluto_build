language: python

cache: pip

# install:
#   - pip install -r requirements.txt

script:
    # - python -m virtualenv venv
    # - source venv/bin/activate
    # Workaround for installing PyInstaller
    - pip install pip==18.1
    - pip install -r requirements.txt
    - git clone https://github.com/shared-systems/PLUTO.git src/main/python/pluto
    - cp base_template.json src/build/settings/base.json 
    - fbs freeze
    - fbs installer

matrix:
  include:

    # Tests Python 3.6 on Ubuntu Trusty
    - python: 3.6
#    - python: 3.7  # as of 8/17.18 3.7 is still being worked on by the travis team
      dist: trusty
      sudo: true

    # Tests Python 3.6 and 3.7 on Ubuntu Xenial
    - python: 3.6
    - python: 3.7
      dist: xenial
      sudo: true

    # MacOs
    # See https://docs.travis-ci.com/user/reference/osx/#os-x-version for details
   
    # 10.10
    # - os: osx
    #   language: generic
    #   osx_image: xcode6.4
    
    # 10.11.latest
    - os: osx
      language: generic
      osx_image: xcode8
    #
    # # 10.12.latest
    # - os: osx
    #   language: generic
    #   osx_image: xcode9.2
    #
    # # 10.13.latest
    # - os: osx
    #   language: generic
    #   osx_image: xcode10
    #
  # # allow_failures:
  #   # 10.10
  #   - os: osx
  #     language: generic
  #     osx_image: xcode6.4
  #
  #   # 10.12.latest
  #   - os: osx
  #     language: generic
  #     osx_image: xcode9.2
  #

# Perform manual install of 3.6 for OS X
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update ; fi
    # Don't install pyenv twice
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && ! [[ -x "$(command -v pyenv)" ]]; then brew install pyenv ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pyenv install 3.6.5 ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then PATH="~/.pyenv/versions/3.6.5/bin:${PATH}" ; fi
    
    # Install `fpm` on linux
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install ruby ruby-dev build-essential ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then gem install --no-document fpm ; fi

before_deploy:
    # Set up git user name and tag this commit
    - git config --local user.name "Sam Gomena"
    - git config --local user.email "gomenas@pdx.edu"
    - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
    - git tag $TRAVIS_TAG

deploy:
    provider: releases
    api_key: "$GITHUB_DEPLOY_KEY"
    file: "target/Pluto.deb"
    skip_cleanup: true

